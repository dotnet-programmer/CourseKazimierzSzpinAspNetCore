@using GymManager.Application.Clients.Queries.GetEditAdminClient
@using GymManager.Application.Dictionaries

@model EditAdminClientVm

@{
    ViewData["Title"] = "Edytowanie danych klienta";
}

<div class="card card-primary card-border-top">

    @using (Html.BeginForm("EditAdminClient", "Client"))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(x => x.Client.Id)

        <div class="card-body">

            <div class="form-group">
                @Html.LabelFor(x => x.Client.Email)
                @Html.TextBoxFor(x => x.Client.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Client.Email)
            </div>            

            <div class="form-group">
                @Html.LabelFor(x => x.Client.FirstName)
                @Html.TextBoxFor(x => x.Client.FirstName, new { @class = "form-control", placeholder="Wprowadź imię"})
                @Html.ValidationMessageFor(x => x.Client.FirstName)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Client.LastName)
                @Html.TextBoxFor(x => x.Client.LastName, new { @class = "form-control", placeholder="Wprowadź nazwisko"})
                @Html.ValidationMessageFor(x => x.Client.LastName)
            </div>

            <div class="form-check">
                @Html.CheckBoxFor(x => x.Client.IsPrivateAccount, new { @class = "form-check-input" })
                @Html.LabelFor(x => x.Client.IsPrivateAccount, new { @class = "form-check-label font-weight-bold" })
            </div>

            <div class="form-group" id="divNipNumber" style="display: none;">
                @Html.LabelFor(x => x.Client.NipNumber)
                @Html.TextBoxFor(x => x.Client.NipNumber, new { @class = "form-control", placeholder="Wprowadź NIP"})
                @Html.ValidationMessageFor(x => x.Client.NipNumber)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Client.Country)
                @Html.TextBoxFor(x => x.Client.Country, new { @class = "form-control", placeholder="Wprowadź kraj zamieszkania"})
                @Html.ValidationMessageFor(x => x.Client.Country)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Client.City)
                @Html.TextBoxFor(x => x.Client.City, new { @class = "form-control", placeholder="Wprowadź miejscowość zamieszkania"})
                @Html.ValidationMessageFor(x => x.Client.City)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Client.ZipCode)
                @Html.TextBoxFor(x => x.Client.ZipCode, new { @class = "form-control", placeholder="Wprowadź kod pocztowy"})
                @Html.ValidationMessageFor(x => x.Client.ZipCode)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Client.Street)
                @Html.TextBoxFor(x => x.Client.Street, new { @class = "form-control", placeholder="Wprowadź ulicę"})
                @Html.ValidationMessageFor(x => x.Client.Street)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Client.StreetNumber)
                @Html.TextBoxFor(x => x.Client.StreetNumber, new { @class = "form-control", placeholder="Wprowadź numer domu"})
                @Html.ValidationMessageFor(x => x.Client.StreetNumber)
            </div>

        </div>

        <div class="card-footer">
             <button type="submit" class="btn btn-primary btn-lg">
                <i class="fas fa-solid fa-circle-check"></i>Zapisz
            </button>
        </div>
    }

</div>


@section Scripts {

    <partial name="Scripts/_ValidationScriptsPartial" />
    <script src="~/lib/inputmask/jquery.inputmask.bundle.min.js"></script>

    <script>
        $(document).ready(function() {

            if ('@Model.Client.IsPrivateAccount.ToString().ToUpper()' == 'FALSE'){
                $("#divNipNumber").show();
            }

            $("#Client_ZipCode").inputmask("99-999", { "clearIncomplete": true, showMaskOnHover: false });

        });

        $('#Client_IsPrivateAccount').click(function() {
            if ($('#Client_IsPrivateAccount').is(':checked')) {
                $("#divNipNumber").hide();
            }
            else {
                $("#divNipNumber").show();
            }
        });

    </script>
}