@using GymManager.Application.Roles.Queries.GetRoles
@using System.Globalization

@model IEnumerable<RoleDto>

@{
	ViewData["Title"] = "Role";
	var locale = CultureInfo.CurrentUICulture.TwoLetterISOLanguageName;
}

@section Styles {
	<partial name="Styles/_DataTablesStylesPartial" />
}

<div class="card card-primary card-border-top">
	<div class="card-body">

		<a href='/Role/AddRole' class="btn btn-primary mb-3" role="button">
			<i class="fas fa-solid fa-circle-plus"></i>Dodaj role
		</a>

		<table id="roles" class="table table-bordered">
			<thead>
				<tr>
					<th>Nazwa roli</th>
					@* class="desktop" oznacza, że kolumna jest widoczna na dyżych ekranach, a jeżeli będzie telefon to będą widoczne kolumny bez tej klasy *@
					<th class="desktop"></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var role in Model)
				{
					<tr>
						<td>
							<a class="edit-link" href='/Role/EditRole?id=@role.Id'>@role.Name</a>
						</td>
						<td>
							<a class="btn btn-success btn-sm" role="button" href="/Role/EditRole?id=@role.Id">
								<i class="fas fa-solid fa-magnifying-glass"></i>Edytuj
							</a>

							<button class="btn btn-danger btn-sm" onclick="deleteRole('@role.Id', this)">
								<i class="fas fa-solid fa-trash-can"></i>Usuń
							</button>
						</td>
					</tr>
				}
			</tbody>
		</table>

	</div>
</div>

@section Scripts {
	<partial name="Scripts/_DataTablesScriptsPartial" />

	<script>
		// wywołanie funkcji po załadowaniu się strony
		$(document).ready(function () {
			roles = $('#roles').DataTable({
				paging: true,
				ordering: true,
				info: true,

				// to ustawienie oznacza wersję na telefon
				responsive: true,

				autoWidth: false,
				lengthChange: true,
				language: {
					// https://datatables.net/plug-ins/i18n/
					url: `/lib/datatables/lang/${'@locale'}.json`
				},
				order: [[0, "asc"]]
			});
		});

		function callAjax() {
			// wywołanie ajax - użycie jQuery - $
			$.ajax({
				// tutaj przekazuje się różne parametry

				// typ metody, która ma zostać wywołana w kontrolerze
				type: "POST",

				// wskazanie na adres URL który ma zostać wywołany (czyli tej metody POST)
				url: "",
				
				// przekazanie różnych danych np. za pomocą jsona do tego kontrolera
				data: {
				},

				// gdy wszystko się powiedzie to zostanie wywołana ta metoda:
				success: function (data) {
				},

				// gdy wystąpi jakiś błąd to zostanie wywołana ta metoda:
				error: function (data) {
				},

				// wskazanie typu odpowiedzi który ma zostać zwrócony
				dataType: "json"
			});
		}

	</script>
}